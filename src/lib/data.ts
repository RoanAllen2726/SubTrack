import type { Subscription, Invoice, AlertRule, AlertEvent, User } from './types';
import { sub as subDate, add, formatISO } from 'date-fns';

export const users: User[] = [
  { id: 'user-1', name: 'Alex Doe', avatarUrl: 'https://i.pravatar.cc/40?u=user-1' },
  { id: 'user-2', name: 'Sam Smith', avatarUrl: 'https://i.pravatar.cc/40?u=user-2' },
  { id: 'user-3', name: 'Jordan Lee', avatarUrl: 'https://i.pravatar.cc/40?u=user-3' },
];

export const subscriptions: Subscription[] = [
  {
    id: 'sub-1',
    name: 'Netflix Premium',
    category: 'Media',
    vendorUrl: 'https://netflix.com',
    loginUrl: 'https://netflix.com/login',
    supportUrl: 'https://help.netflix.com',
    accountEmail: 'billing@example.com',
    ownerUserId: 'user-1',
    owner: users[0],
    plan: 'Premium',
    seats: 4,
    seatUtilizationPct: 75,
    price: 24.99,
    currency: 'NZD',
    billingCycle: 'monthly',
    nextChargeDate: formatISO(add(new Date(), { days: 15 })),
    autoRenew: true,
    paymentMethodMask: 'Card •••• 1234',
    trialEnds: null,
    discount: null,
    cancelUrl: 'https://netflix.com/cancel',
    notes: 'Family account. Shared with parents.',
    status: 'active',
    createdAt: formatISO(subDate(new Date(), { months: 6 })),
    updatedAt: formatISO(new Date()),
  },
  {
    id: 'sub-2',
    name: 'GitHub Pro',
    category: 'DevTool',
    vendorUrl: 'https://github.com',
    loginUrl: 'https://github.com/login',
    supportUrl: 'https://support.github.com',
    accountEmail: 'dev@example.com',
    ownerUserId: 'user-2',
    owner: users[1],
    plan: 'Pro',
    seats: 1,
    seatUtilizationPct: 100,
    price: 44.00,
    currency: 'USD',
    billingCycle: 'annual',
    nextChargeDate: formatISO(add(new Date(), { days: 45 })),
    autoRenew: true,
    paymentMethodMask: 'Card •••• 5678',
    trialEnds: null,
    discount: '10% Student Discount',
    cancelUrl: 'https://github.com/settings/billing',
    notes: 'Personal developer account for side projects.',
    status: 'active',
    createdAt: formatISO(subDate(new Date(), { years: 2 })),
    updatedAt: formatISO(new Date()),
  },
  {
    id: 'sub-3',
    name: 'Azure',
    category: 'Cloud',
    vendorUrl: 'https://azure.microsoft.com',
    loginUrl: 'https://portal.azure.com',
    supportUrl: 'https://azure.microsoft.com/support',
    accountEmail: 'ops@example.com',
    ownerUserId: 'user-3',
    owner: users[2],
    plan: 'Pay-as-you-go',
    seats: 10,
    seatUtilizationPct: 40,
    price: 150.00,
    currency: 'NZD',
    billingCycle: 'monthly',
    nextChargeDate: formatISO(add(new Date(), { days: 20 })),
    autoRenew: true,
    paymentMethodMask: 'Invoice',
    trialEnds: null,
    discount: null,
    cancelUrl: null,
    notes: 'Team cloud infrastructure. Need to monitor costs for Q3. Cancellation requires 30 days notice to the finance team via email to finance@example.com.',
    status: 'active',
    createdAt: formatISO(subDate(new Date(), { years: 1 })),
    updatedAt: formatISO(new Date()),
  },
  {
    id: 'sub-4',
    name: 'Adobe Creative Cloud',
    category: 'Productivity',
    vendorUrl: 'https://adobe.com',
    loginUrl: 'https://account.adobe.com',
    supportUrl: 'https://helpx.adobe.com',
    accountEmail: 'design@example.com',
    ownerUserId: 'user-1',
    owner: users[0],
    plan: 'All Apps',
    seats: 2,
    seatUtilizationPct: 100,
    price: 899.88,
    currency: 'NZD',
    billingCycle: 'annual',
    nextChargeDate: formatISO(add(new Date(), { days: 80 })),
    autoRenew: true,
    paymentMethodMask: 'Card •••• 1234',
    trialEnds: null,
    discount: null,
    cancelUrl: 'https://account.adobe.com/plans',
    notes: 'For the design team.',
    status: 'active',
    createdAt: formatISO(subDate(new Date(), { years: 3 })),
    updatedAt: formatISO(new Date()),
  },
  {
    id: 'sub-5',
    name: 'Notion',
    category: 'Productivity',
    vendorUrl: 'https://notion.so',
    loginUrl: 'https://notion.so/login',
    supportUrl: 'https://notion.so/help',
    accountEmail: 'team@example.com',
    ownerUserId: 'user-2',
    owner: users[1],
    plan: 'Business',
    seats: 15,
    seatUtilizationPct: 90,
    price: 225.00,
    currency: 'USD',
    billingCycle: 'monthly',
    nextChargeDate: formatISO(add(new Date(), { days: 5 })),
    autoRenew: false,
    paymentMethodMask: 'Card •••• 5678',
    trialEnds: null,
    discount: null,
    cancelUrl: null,
    notes: 'Company-wide knowledge base.',
    status: 'active',
    createdAt: formatISO(subDate(new Date(), { months: 18 })),
    updatedAt: formatISO(new Date()),
  },
  {
    id: 'sub-6',
    name: 'Spotify Premium',
    category: 'Media',
    vendorUrl: 'https://spotify.com',
    loginUrl: 'https://accounts.spotify.com',
    supportUrl: 'https://support.spotify.com',
    accountEmail: 'personal@example.com',
    ownerUserId: 'user-1',
    owner: users[0],
    plan: 'Individual',
    seats: 1,
    seatUtilizationPct: 100,
    price: 14.99,
    currency: 'NZD',
    billingCycle: 'monthly',
    nextChargeDate: formatISO(add(new Date(), { days: 28 })),
    autoRenew: true,
    paymentMethodMask: 'Card •••• 9999',
    trialEnds: null,
    discount: null,
    cancelUrl: 'https://spotify.com/account/subscription',
    notes: null,
    status: 'paused',
    createdAt: formatISO(subDate(new Date(), { years: 4 })),
    updatedAt: formatISO(new Date()),
  },
  {
    id: 'sub-7',
    name: 'Figma',
    category: 'Productivity',
    vendorUrl: 'https://figma.com',
    loginUrl: 'https://figma.com/login',
    supportUrl: 'https://help.figma.com',
    accountEmail: 'design@example.com',
    ownerUserId: 'user-1',
    owner: users[0],
    plan: 'Organization',
    seats: 5,
    seatUtilizationPct: 60,
    price: 375.00,
    currency: 'USD',
    billingCycle: 'monthly',
    nextChargeDate: formatISO(subDate(new Date(), { days: 2 })),
    autoRenew: true,
    paymentMethodMask: 'Card •••• 1234',
    trialEnds: null,
    discount: null,
    cancelUrl: 'https://figma.com/settings/billing',
    notes: 'Primary design tool. Canceled auto-renew on the vendor site, need to confirm.',
    status: 'canceled',
    createdAt: formatISO(subDate(new Date(), { months: 20 })),
    updatedAt: formatISO(new Date()),
  },
  {
    id: 'sub-8',
    name: 'Sentry',
    category: 'DevTool',
    vendorUrl: 'https://sentry.io',
    loginUrl: 'https://sentry.io/auth/login',
    supportUrl: 'https://sentry.io/contact',
    accountEmail: 'dev@example.com',
    ownerUserId: 'user-2',
    owner: users[1],
    plan: 'Team',
    seats: 1,
    seatUtilizationPct: null,
    price: 0.00,
    currency: 'USD',
    billingCycle: 'monthly',
    nextChargeDate: formatISO(add(new Date(), { days: 8 })),
    autoRenew: true,
    paymentMethodMask: 'None',
    trialEnds: formatISO(add(new Date(), { days: 8 })),
    discount: null,
    cancelUrl: 'https://sentry.io/settings/billing',
    notes: 'Trial for error tracking. If successful, will upgrade to paid plan. Support contact is support@sentry.io.',
    status: 'active',
    createdAt: formatISO(subDate(new Date(), { days: 6 })),
    updatedAt: formatISO(new Date()),
  },
];

export const invoices: Invoice[] = Array.from({ length: 20 }, (_, i) => {
  const subscription = subscriptions[i % subscriptions.length];
  const date = subDate(new Date(), { months: i % 12 });
  return {
    id: `inv-${i + 1}`,
    subscriptionId: subscription.id,
    invoiceDate: formatISO(date),
    amount: subscription.billingCycle === 'annual' && i % 12 !== 0 ? 0 : subscription.price,
    currency: subscription.currency,
    number: `INV-${date.getFullYear()}-${date.getMonth() + 1}-${subscription.id.slice(-2)}`,
    taxAmount: subscription.price * 0.15,
    gstVatCountry: 'NZ',
    fileUrl: '#',
    createdAt: formatISO(date),
  };
}).filter(inv => inv.amount > 0);

export const alertRules: AlertRule[] = [
  { id: 'rule-1', subscriptionId: 'sub-8', type: 'TrialEnding', thresholdDays: 7, enabled: true, params: {} },
  { id: 'rule-2', subscriptionId: 'sub-2', type: 'RenewalDue', thresholdDays: 30, enabled: true, params: {} },
  { id: 'rule-3', subscriptionId: 'sub-3', type: 'LowUtilization', thresholdDays: 60, enabled: true, params: { utilizationBelow: 50 } },
  { id: 'rule-4', subscriptionId: 'sub-4', type: 'PriceChange', thresholdDays: 0, enabled: true, params: { changeThresholdPct: 10 } },
  { id: 'rule-5', subscriptionId: 'sub-1', type: 'CardExpiring', thresholdDays: 30, enabled: false, params: {} },
];

export const alertEvents: AlertEvent[] = [
  {
    id: 'event-1',
    subscriptionId: 'sub-2',
    ruleId: 'rule-2',
    firedAt: formatISO(subDate(new Date(), { days: 2 })),
    status: 'sent',
    channel: 'Email',
    details: {
      title: 'Upcoming Renewal: GitHub Pro',
      message: 'Your subscription to GitHub Pro for $44.00 USD is renewing in 47 days.',
    }
  },
  {
    id: 'event-2',
    subscriptionId: 'sub-8',
    ruleId: 'rule-1',
    firedAt: formatISO(subDate(new Date(), { days: 1 })),
    status: 'sent',
    channel: 'Email',
    details: {
        title: 'Trial Ending Soon: Sentry',
        message: 'Your trial for Sentry ends in 9 days. Add a payment method to continue service.',
    }
  },
  {
    id: 'event-3',
    subscriptionId: 'sub-3',
    ruleId: 'rule-3',
    firedAt: formatISO(subDate(new Date(), { days: 5 })),
    status: 'suppressed',
    channel: 'Email',
    details: {
        title: 'Low Utilization: Azure',
        message: 'Seat utilization for Azure is below 50%. Consider adjusting your plan.',
    }
  },
];
